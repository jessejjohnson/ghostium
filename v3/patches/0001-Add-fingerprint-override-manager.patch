diff --git a/chrome/browser/fingerprinting/override_manager.h b/chrome/browser/fingerprinting/override_manager.h
new file mode 100644
index 00000000000..a1b2c3d4e5f
--- /dev/null
+++ b/chrome/browser/fingerprinting/override_manager.h
@@ -0,0 +1,48 @@
+// Copyright 2024 Ghostium Authors
+
+#ifndef CHROME_BROWSER_FINGERPRINTING_OVERRIDE_MANAGER_H_
+#define CHROME_BROWSER_FINGERPRINTING_OVERRIDE_MANAGER_H_
+
+#include <string>
+#include <map>
+#include <memory>
+
+#include "base/files/file_path.h"
+#include "base/values.h"
+
+class FingerprintOverrideManager {
+ public:
+  static FingerprintOverrideManager* GetInstance();
+
+  // Load configuration from JSON file
+  bool LoadConfig(const base::FilePath& config_path);
+
+  // API for various fingerprint surfaces
+  std::string GetUserAgent() const;
+  unsigned GetHardwareConcurrency() const;
+  std::string GetPlatform() const;
+  double GetDeviceMemory() const;
+  std::string GetLanguage() const;
+  std::vector<std::string> GetLanguages() const;
+  std::string GetTimezone() const;
+  bool IsWebDriver() const;
+
+  // WebGL/Canvas
+  std::string GetWebGLVendor() const;
+  std::string GetWebGLRenderer() const;
+  std::string GetCanvasNoiseHash() const;
+
+  // Runtime toggling
+  void EnableSpoofing(bool enable);
+  bool IsSpoofingEnabled() const;
+
+ private:
+  FingerprintOverrideManager();
+  ~FingerprintOverrideManager();
+
+  bool is_enabled_ = true;
+  std::map<std::string, base::Value> config_;
+  base::FilePath config_path_;
+};
+
+#endif  // CHROME_BROWSER_FINGERPRINTING_OVERRIDE_MANAGER_H_